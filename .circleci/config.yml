version: 2.1
# Use a package of configuration called an orb.
orbs:
  aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name my-stack
jobs:
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name my-stack
      - run: return 1
      - destroy_environment

  # Exercise: Config and Deployment
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
            # You can get this ID in the section where you registered the SSH Key
            fingerprints: ["d1:54:49:9e:1e:c8:ff:95:fd:fc:a8:86:c9:95:4f:c2"] 
      - run:
          name: Install Ansible
          command: |
            # Install Ansible
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory main-remote.yml
  
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            if curl -s --head ${URL}
            then
              return 0
            else
              return 1
            fi
      - destroy_environment
  
  # Executes the bucket.yml - Deploy an S3 bucket, and interface with that bucket to synchronize the files between local and the bucket.
  # Note that the `--parameter-overrides` let you specify a value that override parameter value in the bucket.yml template file.
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Execute bucket.yml - Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID} \
            --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID}"
      # Uncomment the step below if yoou wish to upload all contents of the current directory to the S3 bucket
      - run: aws s3 sync . s3://mybucket-${CIRCLE_WORKFLOW_ID} --delete
          

# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - create_infrastructure
      - configure_infrastructure
      - smoke_test
      - create_and_deploy_front_end